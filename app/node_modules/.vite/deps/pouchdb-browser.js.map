{
  "version": 3,
  "sources": ["../../vuvuzela/index.js", "../../argsarray/index.js", "../../inherits/inherits_browser.js", "../../pouchdb-browser/lib/index.es.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/rng.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/regex.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/validate.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/stringify.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/parse.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/v35.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/md5.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/v3.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/v4.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/sha1.js", "../../pouchdb-browser/node_modules/uuid/dist/esm-browser/v5.js"],
  "sourcesContent": ["'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n", "'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "import immediate from 'immediate';\nimport { v4 } from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport EE from 'events';\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.keys = function () {\n  return Object.keys(this._store).map(k => unmangle(k));\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date && isFinite(object)) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EE);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EE.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EE.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    var names = Object.getOwnPropertyNames(error);\n    for (var i = 0, len = names.length; i < len; i++) {\n      if (typeof error[names[i]] !== 'function') {\n        this[names[i]] = error[names[i]];\n      }\n    }\n\n    if (this.stack === undefined) {\n      this.stack = (new Error()).stack;\n    }\n\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  if (!('stack' in err)) {\n    err.stack = (new Error()).stack;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(change.doc._attachments, att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EE.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (Object.prototype.hasOwnProperty.call(scope, key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return db.get(docId)\n    .catch(function (err) {\n      /* istanbul ignore next */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return {};\n    })\n    .then(function (doc) {\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return {updated: false, rev: docRev};\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      return tryAndPut(db, newDoc, diffFun);\n    });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = self.setImmediate || self.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\n/**\n * Creates a new revision string that does NOT include the revision height\n * For example '56649f1b0506c6ca9fda0746eb0cacdf'\n */\nfunction rev$$1(doc, deterministic_revs) {\n  if (!deterministic_revs) {\n    return v4().replace(/-/g, '').toLowerCase();\n  }\n\n  var mutateableDoc = $inject_Object_assign({}, doc);\n  delete mutateableDoc._rev_tree;\n  return stringMd5(JSON.stringify(mutateableDoc));\n}\n\nvar uuid = v4; // mimic old import, only v4 is ever used elsewhere\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EE);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EE);\n\nfunction AbstractPouchDB() {\n  EE.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev$$1();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(doc._attachments, key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var dbOptions = clone(this.__opts);\n  if (this.__opts.view_adapter) {\n    dbOptions.adapter = this.__opts.view_adapter;\n  }\n\n  var depDB = new this.constructor(dependentDb, dbOptions);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  if (opts.view_adapter) {\n    if (!PouchDB.adapters[opts.view_adapter] ||\n        !PouchDB.adapters[opts.view_adapter].valid()) {\n      throw new Error('Invalid View Adapter: ' + opts.view_adapter);\n    }\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EE();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.3.1\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (i > 0 && fieldName[i - 1] === '\\\\' && (ch === '$' || ch === '.')) {\n      // escaped delimiter\n      current = current.substring(0, current.length - 1) + ch;\n    } else if (ch === '.') {\n      // When `.` is not escaped (above), it is a field delimiter\n      fields.push(current);\n      current = '';\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n  var first = {$or: true, $nor: true};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        // or, nor\n        if (matcher instanceof Array) {\n          if (first[field]) {\n            first[field] = false;\n            res[field] = matcher;\n            return;\n          }\n\n          var entries = [];\n          res[field].forEach(function (existing) {\n            Object.keys(matcher).forEach(function (key) {\n              var m = matcher[key];\n              var longest = Math.max(Object.keys(existing).length, Object.keys(m).length);\n              var merged = mergeAndedSelectors([existing, m]);\n              if (Object.keys(merged).length <= longest) {\n                // we have a situation like: (a :{$eq :1} || ...) && (a {$eq: 2} || ...)\n                // merging would produce a $eq 2 when actually we shouldn't ever match against these merged conditions\n                // merged should always contain more values to be valid\n                return;\n              }\n              entries.push(merged);\n            });\n          });\n          res[field] = entries;\n        } else {\n          // not\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          } else if (operator === \"$regex\") {\n            return mergeRegex(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n// combine $regex values into one array\nfunction mergeRegex(value, fieldMatchers) {\n  if ('$regex' in fieldMatchers) {\n    // a value could match multiple regexes\n    fieldMatchers.$regex.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$regex = [value];\n  }\n}\n\n//#7458: execute function mergeAndedSelectors on nested $and\nfunction mergeAndedSelectorsNested(obj) {\n    for (var prop in obj) {\n        if (Array.isArray(obj)) {\n            for (var i in obj) {\n                if (obj[i]['$and']) {\n                    obj[i] = mergeAndedSelectors(obj[i]['$and']);\n                }\n            }\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            mergeAndedSelectorsNested(value); // <- recursive call\n        }\n    }\n    return obj;\n}\n\n//#7458: determine id $and is present in selector (at any level)\nfunction isAndInSelector(obj, isAnd) {\n    for (var prop in obj) {\n        if (prop === '$and') {\n            isAnd = true;\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            isAnd = isAndInSelector(value, isAnd); // <- recursive call\n        }\n    }\n    return isAnd;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n    //#7458: if $and is present in selector (at any level) merge nested $and\n    if (isAndInSelector(result, false)) {\n        result = mergeAndedSelectorsNested(result);\n        if ('$and' in result) {\n            result = mergeAndedSelectors(result['$and']);\n        }\n        wasAnded = true;\n    }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if (!wasAnded) {\n      // These values must be placed in an array because these operators can be used multiple times on the same field\n      // when $and is used, mergeAndedSelectors takes care of putting them into arrays, otherwise it's done here:\n      if ('$ne' in matcher) {\n        matcher.$ne = [matcher.$ne];\n      }\n      if ('$regex' in matcher) {\n        matcher.$regex = [matcher.$regex];\n      }\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging\n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (Object.prototype.hasOwnProperty.call(origKey, k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  // is matcher an object, if so continue recursion\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (maybeUserOperator) {\n      var userValue = matcher[ maybeUserOperator ];\n      // explicit operator\n      if (maybeUserOperator.indexOf(\"$\") === 0) {\n        return match(maybeUserOperator, doc, userValue, parsedField, docFieldValue);\n      } else {\n        var subParsedField = parseField(maybeUserOperator);\n\n        if (\n          docFieldValue === undefined &&\n          typeof userValue !== \"object\" &&\n          subParsedField.length > 0\n        ) {\n          // the field does not exist, return or getFieldFromDoc will throw\n          return false;\n        }\n\n        var subDocFieldValue = getFieldFromDoc(docFieldValue, subParsedField);\n\n        if (typeof userValue === \"object\") {\n          // field value is an object that might contain more operators\n          return matchSelector(userValue, doc, parsedField, subDocFieldValue);\n        }\n\n        // implicit operator\n        return match(\"$eq\", doc, userValue, subParsedField, subDocFieldValue);\n      }\n    });\n  }\n\n  // no more depth, No need to recurse further\n  return matcher === docFieldValue;\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    /* istanbul ignore next */\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  if (typeof docFieldValue !== \"number\" ||\n    parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  var divisor = userValue[0];\n  var mod = userValue[1];\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.some(function (docFieldValueItem) {\n        return collate(val, docFieldValueItem) === 0;\n      });\n    }\n\n    return collate(val, docFieldValue) === 0;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.some(function (docFieldValueItem) {\n      return collate(val, docFieldValueItem) === 0;\n    });\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object' &&  docFieldValue[0] !== null) {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object' &&  docFieldValue[0] !== null) {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) &&\n      Array.isArray(docFieldValue) &&\n      arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) &&\n      typeof docFieldValue == \"string\" &&\n      userValue.every(function (regexValue) {\n        return regexMatch(docFieldValue, regexValue);\n      });\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_access',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  // replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up in the document\nvar dataWords = toObject([\n  '_access',\n  '_attachments',\n  // replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+-/.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev$$1(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (Object.prototype.hasOwnProperty.call(docInfo.data._attachments, key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  var idbGlobalFailureError = null;\n  api._meta = null;\n\n  function enrichCallbackError(callback) {\n    return function (error, result) {\n      if (error && error instanceof Error && !error.reason) {\n        if (idbGlobalFailureError) {\n          error.reason = idbGlobalFailureError;\n        }\n      }\n\n      callback(error, result);\n    };\n  }\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, enrichCallbackError(callback));\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev;\n      if (!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, enrichCallbackError(callback));\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idbGlobalFailureError = e.target.error;\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function (e) {\n    var msg = e.target.error && e.target.error.message;\n\n    if (!msg) {\n      msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    } else if (msg.indexOf(\"stored database is a higher version\") !== -1) {\n      msg = new Error('This DB was created with the newer \"indexeddb\" adapter, but you are trying to open it with the older \"idb\" adapter');\n    }\n\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    options.credentials = 'include';\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ?\n        genUrl(host, path.substring(1)) :\n        genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if ('buffer' in response) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n            if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser && typeof response.buffer === 'function') {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n        if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n          blob.type = contentType;\n        }\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(opts.query_params, param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e, data) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e, data);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e, {fun: fun, doc: doc});\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e, {fun: fun, keys: keys, values: values, rereduce: rereduce});\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view, opts);\n    })();\n  }\n\n  function updateViewInQueue(view, opts) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    let indexed_docs = 0;\n    let progress = {\n      view: view.name,\n      indexed_docs: indexed_docs\n    };\n    view.sourceDB.emit('indexing', progress);\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: opts.changes_batch_size\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\n      indexed_docs = indexed_docs + results.length;\n      let progress = {\n        view: view.name,\n        last_seq: response.last_seq,\n        results_count: results.length,\n        indexed_docs: indexed_docs\n      };\n      view.sourceDB.emit('indexing', progress);\n      \n      if (results.length < opts.changes_batch_size) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else if (typeof opts.keys === 'undefined') {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      } else {\n        // support limit, skip for keys query\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: sliceResults(rows,opts.limit,opts.skip)\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    var updateViewOpts = {\n      changes_batch_size: db.__opts.view_update_changes_batch_size || CHANGES_BATCH_SIZE$1\n    };\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view, updateViewOpts).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view, updateViewOpts);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view, updateViewOpts).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var style = opts.style || 'all_docs';\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of\n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      returnValue.emit('checkpoint', { 'checkpoint': currentBatch.seq });\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      returnValue.emit('checkpoint', { 'revs_diff': change });\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    returnValue.emit('checkpoint', { 'start_next_batch': currentBatch.seq });\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate$$1 ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    returnValue.emit('checkpoint', { 'pending_batch': pendingBatch.seq });\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: style,\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EE);\nfunction Replication() {\n  EE.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n  self.once('error', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EE);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB;\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;"],
  "mappings": "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",
  "names": ["stringify", "queue", "keys", "pop", "collationIndex", "inherits", "uuid", "uuid", "uuid", "version", "a", "a", "keys", "getArguments", "self", "inherits", "EE", "immediate", "reason", "filter", "Md5", "a", "queue", "opts", "i", "l", "key", "err", "incompatibleOpt", "PouchDB", "match", "fields", "field", "matcher", "isArray", "collationIndex", "validate", "changesHandler", "md5", "vuvuzela", "winningRev", "doc", "count", "cursor", "len", "req", "callback", "e", "putReq", "changes", "running", "dbUrl", "stringify", "localDocName", "mapper", "reducer", "ddocValidator", "readAttachmentsAsBlobOrBuffer", "keyValue", "processChange", "progress", "mapResults", "viewOpts", "fun", "values", "version", "res", "result"]
}
